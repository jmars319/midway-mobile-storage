/* Minimal DOM sanitizer (not a full DOMPurify replacement)
 * - Removes <script> elements
 * - Strips attributes that start with 'on' (inline event handlers)
 * - Removes javascript: from URL attributes
 * This is intended as a lightweight safeguard; for production, vendor
 * the official DOMPurify build from https://github.com/cure53/DOMPurify
 */
(function(window){
	'use strict';
	function sanitize(dirty) {
		if (!dirty) return '';
		try {
			var parser = new DOMParser();
			var doc = parser.parseFromString(String(dirty), 'text/html');
			// remove script and style elements
			var scripts = doc.querySelectorAll('script, style');
			scripts.forEach(function(s){ s.parentNode && s.parentNode.removeChild(s); });
			// remove on* attributes and javascript: URLs
					var walker = doc.createTreeWalker(doc.body, NodeFilter.SHOW_ELEMENT, null, false);
					var node = walker.nextNode();
					while (node) {
						// copy attributes to avoid live mutation issues
						var attrs = Array.from(node.attributes || []);
						attrs.forEach(function(a){
							var name = a.name || '';
							var val = a.value || '';
							if (/^on/i.test(name)) { node.removeAttribute(name); return; }
							if ((name === 'href' || name === 'src' || name === 'xlink:href') && /^\s*javascript:/i.test(val)) { node.removeAttribute(name); return; }
							// optionally, strip data attributes that look risky? keep others
						});
						node = walker.nextNode();
					}
			return doc.body.innerHTML || '';
		} catch (e) {
			return String(dirty).replace(/<script[\s\S]*?>[\s\S]*?<\/script>/gi,'');
		}
	}
	window.DOMPurify = { sanitize: sanitize };
})(window);